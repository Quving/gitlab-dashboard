image: docker:latest

variables:
  DOCKER_DRIVER: overlay2

stages:
  - build
  - test.rb
  - publish
  - deploy

variables:
  DRAFT: $CI_REGISTRY_IMAGE:draft_$CI_PIPELINE_ID # Gebaut noch zu testen
  DEVELOP: $CI_REGISTRY_IMAGE:develop
  MASTER: $CI_REGISTRY_IMAGE:master
  HERMES: $CI_REGISTRY/hoou/hermes:latest  # Image von Hermes
  PROXY_HTTP: http://proxy.hoou.ovh:3128
  TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG # Image fuer Production-Grid

build:
  stage: build
  before_script:
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
  script:
    - docker build --no-cache --build-arg https_proxy=$PROXY_HTTP --build-arg http_proxy=$PROXY_HTTP -t $DRAFT .


test:
  stage: test.rb
  before_script:
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
  script:
    - echo "No tests implemented."
    - docker tag $DRAFT $DEVELOP
    - docker tag $DRAFT $MASTER
  after_script:
    - docker rmi -f $DRAFT

publish:
  stage: publish
  only:
    - master
  before_script:
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
  script:
    - docker push $MASTER

deploy:
  stage: deploy
  image:
    name: kontena/cli:latest
    entrypoint: ["/bin/sh", "-c"]
  variables:
    KONTENA_URL: $KONTENA_URL
    KONTENA_TOKEN: $KONTENA_TOKEN
    KONTENA_GRID: "data-science"
    KONTENA_STACK: "dash-web"
    SSL_IGNORE_ERRORS: "true"
  only:
    - master
  script:
    - kontena stack install --name $KONTENA_STACK || kontena stack upgrade $KONTENA_STACK

